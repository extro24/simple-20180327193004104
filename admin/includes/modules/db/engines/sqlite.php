<?phpclass sqlite implements IDatabase{		private $server='localhost';	private $db='pokerize';	private $user='root';	private $pass='';		private $pers=false;	private $connected=false;		private $handle='';		function __construct($server,$db,$user,$pass,$connect=false,$pers=false,$type=''){		$this->server=$server;		$this->db=$db;		$this->user=$user;		$this->pass=$pass;				$this->pers=$pers;		 		if ($connect){			$this->connect();		}	}// end constuctor	// -------------- \\// --- Public --- \\// -------------- \\	/* Connect to database	input : 	void	output : 	void	*/	public function connect(){ //connrct to database		if ($this->connected==false){			if ($this->pers){				$this->handle=sqlite_popen($this->server);			}else{				$this->handle=sqlite_open($this->server);			}						//$this->engine = new SQLiteDatabase($this->server);			$this->connected=true;		}//	}	/* Execute a query	input : 	string $q	output : 	void	*/	public function query($q){ //		$this->connect();	//connect if not connected 		return sqlite_query($this->handle,$q);	}		/* 2d-array of table rows with colum name as indexies	input : 	string $q	output : 	array ()	*/	public function getRows($q){ // get array of rows objects		$this->connect();	//connect if not connected 		$query=$this->query($q);		$result=array();		while ($data=sqlite_fetch_object($query)){			$result[]=$data;		}		return $result;	}		/* return new array of 'INSERT' query	input : 	void	output : 	int $ID	*/	public function newId(){ // get array of rows objects		return sqlite_last_insert_rowid ($this->handle);	}	/* return the function value (sum/count/min) of a query	input : 	string query	output : 	mixed	*/	public function getFunction($q){		$this->connect();	//connect if not connected 		$res=sqlite_fetch_array (sqlite_query($this->handle,$q));		return $res["0"];	}		}//end class?>